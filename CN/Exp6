#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>  // for sleep()

#define MAX_FRAMES 50

int window_size;   // Size of the sliding window
int total_frames;  // Total frames to be sent

// Function to simulate whether a frame/ACK is lost
int is_lost(float loss_prob) {
    float r = (float)rand() / RAND_MAX;
    return (r < loss_prob);
}

void goBackN() {
    int send_base = 0, next_seq_num = 0;
    int acked[MAX_FRAMES] = {0};

    while (send_base < total_frames) {
        // Send frames in the window
        while (next_seq_num < send_base + window_size && next_seq_num < total_frames) {
            printf("Sender: Sending Frame %d\n", next_seq_num + 1);

            if (is_lost(0.2)) {  // 20% chance frame is lost
                printf("⚠️ Frame %d lost in transmission!\n", next_seq_num + 1);
            }
            next_seq_num++;
            sleep(1);
        }

        // Receive ACKs for frames in the window
        for (int i = send_base; i < next_seq_num; i++) {
            if (!acked[i]) {
                if (is_lost(0.2)) {  // 20% chance ACK is lost
                    printf("⚠️ ACK %d lost!\n", i + 1);
                    printf("⏳ Timeout! Resending from Frame %d...\n", i + 1);
                    next_seq_num = i; // Go back to the lost frame
                    break;
                } else {
                    printf("Receiver: ACK %d received\n", i + 1);
                    acked[i] = 1;
                    send_base++;
                }
            }
        }
        sleep(1);
    }
    printf("\n✅ All frames successfully transmitted with Go-Back-N ARQ!\n");
}

int main() {
    srand(time(0)); // Random seed

    printf("Enter total number of frames to send: ");
    scanf("%d", &total_frames);

    printf("Enter window size: ");
    scanf("%d", &window_size);

    if (total_frames > MAX_FRAMES) {
        printf("Max frames allowed is %d\n", MAX_FRAMES);
        return 1;
    }

    printf("\n--- Go-Back-N ARQ Protocol Simulation ---\n\n");
    goBackN();

    return 0;
}
